package concurrency.threads;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.net.Socket;

import log.LogMessage;
import gui.client.Client;
import gui.client.ClienteFrame;
import pt.progJava.americoLib.control108.bean.ChatMessage;

public class In implements Runnable {

	//ObjectInputStream
	private ObjectInputStream input;
	//LOG4J LOGGER
	private static LogMessage logger = new LogMessage();
	private Client clientFrame;

	//CONSTRUCTOR
	public In(Socket socket, Client clientFrame) {
		try {
			this.clientFrame = clientFrame;
			this.input = new ObjectInputStream(socket.getInputStream());
		} catch (IOException ex) {
			logger.getLog().info("IOException="+ex);
		}
	}

	//RUN
	public void run() {
		ChatMessage message = (ChatMessage) this.input.readObject();
		try {
			while ( message != null) {
				ChatMessage.Action action = message.getAction();

				if (action.equals(ChatMessage.Action.CONNECT)) {
					clientFrame.connect(message);
				} else if (action.equals(ChatMessage.Action.DISCONNECT)) {
					clientFrame.disconnected();
					clientFrame.getS.close();
				} else if (action.equals(ChatMessage.Action.SEND_ONE)) {
					clientFrame.receive(message);
				} else if (action.equals(ChatMessage.Action.USERS_ONLINE)) {
					clientFrame.refreshOnlines(message);
				}
			}
		} catch (IOException ex) {
			logger.getLog().info("IOException="+ex);

		} catch (ClassNotFoundException ex) {
			logger.getLog().info("ClassNotFoundException="+ex);

		}
	}

}
