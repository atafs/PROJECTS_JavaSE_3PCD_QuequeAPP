package concurrency.threads;

import java.net.Socket;

import log.LogMessage;
import gui.client.ClienteFrame;
import pt.progJava.americoLib.control108.bean.ChatMessage;

public class In implements Runnable {

	private java.io.ObjectInputStream input;

	public In(Socket socket) {
		try {
			this.input = new java.io.ObjectInputStream(socket.getInputStream());
		} catch (java.io.IOException ex) {
			java.util.logging.Logger.getLogger(ClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
			LogMessage.getLog();
		}
	}

	public void run() {
		ChatMessage message = null;
		try {
			while ((message = (ChatMessage) this.input.readObject()) != null) {
				ChatMessage.Action action = message.getAction();

				if (action.equals(ChatMessage.Action.CONNECT)) {
					ClienteFrame.this.connect(message);
				} else if (action.equals(ChatMessage.Action.DISCONNECT)) {
					ClienteFrame.this.disconnected();
					ClienteFrame.this.socket.close();
				} else if (action.equals(ChatMessage.Action.SEND_ONE)) {
					ClienteFrame.this.receive(message);
				} else if (action.equals(ChatMessage.Action.USERS_ONLINE)) {
					ClienteFrame.this.refreshOnlines(message);
				}
			}
		} catch (java.io.IOException ex) {
			java.util.logging.Logger.getLogger(ClienteFrame.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ClienteFrame.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		}
	}

}
