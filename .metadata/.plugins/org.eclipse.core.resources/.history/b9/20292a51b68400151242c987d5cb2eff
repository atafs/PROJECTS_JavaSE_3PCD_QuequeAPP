package com.iscte.queque.client.gui;

import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;

import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import com.iscte.queque.controlServerGUI.DataPackage;

public class ServerFrame extends JFrame{
	
	//ATTRIBUTES
	public static int port = 5555;
	public static String ip = "";
	public static ServerSocket server;
	
	//LISTS
	public static ArrayList<Socket> list_sockets = new ArrayList<Socket>();
	public static ArrayList<Integer> list_cliente_states = new ArrayList<Integer>();
	public static ArrayList<DataPackage> list_data = new ArrayList<DataPackage>();
	
	private static final long serialVersionUID = 1L;
	
	//GUI
	public JFrame frame;
	public JPanel content;
	public JPanel panel1;
	public JPanel panel2;
	public JPanel panel3;
	public JButton btn_disconnect;
	public JList list_client;
	public DefaultListModel list_clients_model;


	/** */
	private void gui_initComponents() {
		
//		btn_disconnect = new JButton();
		btn_disconnect.setText("Disconnect");
		btn_disconnect.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				int selected = list_client.getSelectedIndex();

				if (selected != -1) {

					try {
						list_cliente_states.set(selected, 1);
					} catch (Exception e2) {
						JOptionPane.showMessageDialog(null, "ERROR: " + e2.getMessage(), "ALERT", JOptionPane.ERROR_MESSAGE);
					}
				}
			}
		});

		list_clients_model = new DefaultListModel<>();
		list_client = new JList<>(list_clients_model);
		list_client.addListSelectionListener(new ListSelectionListener() {

			@Override
			public void valueChanged(ListSelectionEvent e) {

				if (e.getValueIsAdjusting()) {
					System.out.println(list_client.getSelectedIndex());
				}
			}
		});

		frame = new JFrame();
		frame.setTitle("SERVER - " + ip);
		frame.addWindowListener(new WindowListener() {

			@Override
			public void windowOpened(WindowEvent arg0) {}

			@Override
			public void windowIconified(WindowEvent arg0) {}

			@Override
			public void windowDeiconified(WindowEvent arg0) {}

			@Override
			public void windowDeactivated(WindowEvent arg0) {}

			@Override
			public void windowClosing(WindowEvent arg0) {
				while(list_sockets.size() != 0) {
					
					try {
						for (int i = 0; i < list_cliente_states.size(); i++) {
							list_cliente_states.set(i, 2);
						}
					} catch (Exception e) {
						
					}
				}
				
				System.exit(0);
			}

			@Override
			public void windowClosed(WindowEvent arg0) {}

			@Override
			public void windowActivated(WindowEvent arg0) {}
		});
		
		panel1 = new JPanel();
		panel1.setLayout(new GridLayout(1, 1, 1, 1));
		panel1.add(btn_disconnect);
		
		panel2 = new JPanel();
		panel2.add(new JLabel(ip));
		
		panel3 = new JPanel();
		panel3.setLayout(new BorderLayout(1,1));
		panel3.add(panel1, BorderLayout.NORTH);
		panel3.add(new JScrollPane(list_client), BorderLayout.CENTER);
		panel3.add(panel2, BorderLayout.SOUTH);
		
		content = new JPanel();
		content.setLayout(new GridLayout(1,1,1,1));
		content.add(panel3);
		
		content.setBorder(BorderFactory.createEmptyBorder(20,20,20,20));
		


	}
	
	/** INIT: */
    private void gui_lastInstructions() {
		frame.setLocationRelativeTo(null);
		frame.setContentPane(content);
		frame.pack();
		frame.setSize(350,400);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }
    
    /** START: */
    private void gui_start() {
    	frame.setVisible(true);
    }
	
//	/** */
//	public static void disconectClient(int index) {
//		
//		try {
//			list_clients_model.removeElementAt(index);
//			list_cliente_states.remove(index);
//			list_data.remove(index);
//			list_sockets.remove(index);
//		} catch (Exception e) {
//			// TODO: handle exception
//		}
//	}

}
